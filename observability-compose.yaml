services:
  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      VIRTUAL_HOST: ${DOMAIN_GRAFANA}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD}
      LETSENCRYPT_HOST: ${DOMAIN_GRAFANA}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      VIRTUAL_PORT: 3000

  prometheus: # collect and store metrics in a time serices database
    image: prom/prometheus:v2.53.2
    container_name: prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus:/prometheus"
    ports:
      - "9090:9090"
    environment:
      VIRTUAL_HOST: ${DOMAIN_PROMETHEUS}
      LETSENCRYPT_HOST: ${DOMAIN_PROMETHEUS}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      VIRTUAL_PORT: 9090

  node_exporter: # machine metrics to be scraped by prometheus
    image: prom/node-exporter:v1.8.2
    container_name: node_exporter
    restart: unless-stopped
    command:
      - "--path.rootfs=/host"
    volumes:
      - "/:/host:ro,rslave"
    ports:
      - 9100:9100

  caadvisor: # container metrics to be scraped by prometheus
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    container_name: caadvisor
    restart: unless-stopped
    volumes:
      - "/dev/disk/:/dev/disk:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/sys:/sys:ro"
      - "/var/run:/var/run:ro"
      - "/:/rootfs:ro"
    ports:
      - 8080:8080

  proxy: # proxy request
    image: nginxproxy/nginx-proxy:1.6
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt: # perform encryption of domain
    image: nginxproxy/acme-companion:2.4
    container_name: letsencrypt
    restart: always
    volumes_from:
      - proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEFAULT_EMAIL: ${ADMIN_EMAIL}

  promtail: # machine and container logs ships to grafana
    image: grafana/promtail:3.1.1
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /etc/hostname:/etc/hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./observability-promtail.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml

  loki: # store and query logs
    image: grafana/loki:3.1.1
    container_name: loki
    restart: unless-stopped
    volumes:
      - loki:/loki
      - ./loki.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "0.0.0.0:3100:3100"

  jaeger:
    image: jaegertracing/all-in-one:1.62.0
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
      VIRTUAL_HOST: ${DOMAIN_JAEGER}
      LETSENCRYPT_HOST: ${DOMAIN_JAEGER}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
    restart: unless-stopped

volumes:
  grafana:
  prometheus:
  acme:
  certs:
  html:
  loki:
